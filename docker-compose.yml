version: '3.8'

env_file: .env.production


services:
  # Redis 服务
  redis:
    image: redis:7-alpine
    container_name: blog_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  # FastAPI 后端服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: blog_backend
    ports:
      - "8000:8000"
    volumes:
      - ./uploads:/app/uploads
      - ./blog.db:/app/blog.db
      - ./alembic:/app/alembic
    environment:
      - REDIS_URL=${REDIS_URL}
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - ENVIRONMENT=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      
    depends_on:
      - redis
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4

  # 前端构建服务
  frontend-build:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: blog_frontend_build
    volumes:
      - frontend_dist:/app/dist
    environment:
      - VITE_API_BASE_URL=http://backend:8000/api/v1


  frontend-dev:
    image: node:20-alpine
    working_dir: /app
    container_name: blog_frontend_dev 
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app                     # 挂载代码目录，node_modules 也会在这儿
      - pnpm_store:/root/.pnpm-store        # 持久化 pnpm 缓存目录，避免每次重装
    depends_on:
      - backend
    restart: unless-stopped
    environment:
      - VITE_API_BASE_URL=http://backend:8000/api/v1
    command: sh -c "npm i -g pnpm && pnpm install && pnpm dev"


  # Nginx 服务
  nginx:
    image: nginx:alpine
    container_name: blog_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl:ro
      - frontend_dist:/usr/share/nginx/html
      - ./uploads:/usr/share/nginx/uploads
    depends_on:
      - backend
      - frontend-build
    restart: unless-stopped
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=443
    healthcheck:
      test: ["CMD-SHELL", "wget --spider --quiet http://localhost || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  redis_data:
  frontend_dist:
  pnpm_store:

networks:
  default:
    name: blog_net